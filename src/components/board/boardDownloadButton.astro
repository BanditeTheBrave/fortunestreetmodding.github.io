---
import type { MapDescriptorExtended } from '~/lib/getboards';
interface Props {
  board: MapDescriptorExtended;
}
const { board } = Astro.props;
---
<div class="btn-group" role="group">
  <a class="btn btn-primary" href={`/boards/${board.slug}.zip`}>Board</a>
  {board.backgroundData.download && (
    <>
      {board.backgroundData.download.length == 1 ? (<a class="btn btn-primary" href={`/boards/${board.slug}.zip`}>Background</a>) : (
        <div class="btn-group" role="group">
          <button id={`btnGroupBgDrop-${board.slug}`} type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            Background
          </button>
          <ul class="dropdown-menu" aria-labelledby={`btnGroupBgDrop-${board.slug}`}>
            {board.backgroundData.download.map((download) => (
              <li><a class="dropdown-item" href="{{ download }}">{new URL(download).hostname}</a></li>
            ))}
          </ul>
        </div>
      )}
    </>
  )}
  {board.music?.download && (
    <>
      {board.music.download.length == 1 ? (<a class="btn btn-primary" href="{{ background.download }}">Music</a>) : (
        <div class="btn-group" role="group">
          <button id="btnGroupMusicDrop-{%- include renderMapSlugClass.liquid map=map -%}" type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            Music
          </button>
          <ul class="dropdown-menu" aria-labelledby="btnGroupMusicDrop-{%- include renderMapSlugClass.liquid map=map -%}">
            {board.music.download?.map((download) => (
              <li><a class="dropdown-item" href="{{ download }}">{new URL(download).hostname}</a></li>
            ))}
          </ul>
        </div>
      )}
    </>
  )}
</div>