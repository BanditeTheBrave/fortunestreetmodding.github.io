---
import type { MapDescriptorExtended } from '~/lib/getboards';
interface Props {
  board: MapDescriptorExtended;
}
const { board } = Astro.props;
---
<style is:global>
.mapCard-image-board {
  width:100%;
  height:400px;
  object-fit:scale-down;
  position:absolute;
  filter: drop-shadow(0 0 6px #000b);
  z-index: 2;
  padding: 1rem;
}
.mapCard-image-background {
  width:100%;
  height:400px;
  object-fit:cover;
  position:relative;
  filter: blur(1px) grayscale(50%) contrast(50%) opacity(65%);
  z-index: 1;
}
.btn-state-tiny {
  position: absolute;
  padding: 0.75rem 0.375rem;
  line-height: 0;
  border-width: 2px;
  width: 2rem;
  white-space: nowrap;
  z-index: 3;
  filter: grayscale(1);
}
:checked+.btn-state-tiny {
  filter: grayscale(0);
}
 .btn-state-tiny.state-0 { left: 1rem; top: calc(1.0rem +  0*1.7rem); }
 .btn-state-tiny.state-1 { left: 1rem; top: calc(1.0rem +  1*1.7rem); }
 .btn-state-tiny.state-2 { left: 1rem; top: calc(1.0rem +  2*1.7rem); }
 .btn-state-tiny.state-3 { left: 1rem; top: calc(1.0rem +  3*1.7rem); }
 .btn-state-tiny.state-4 { left: 1rem; top: calc(1.0rem +  4*1.7rem); }
 .btn-state-tiny.state-5 { left: 1rem; top: calc(1.0rem +  5*1.7rem); }
 .btn-state-tiny.state-6 { left: 1rem; top: calc(1.0rem +  6*1.7rem); }
 .btn-state-tiny.state-7 { left: 1rem; top: calc(1.0rem +  7*1.7rem); }
 .btn-state-tiny.state-8 { left: 1rem; top: calc(1.0rem +  8*1.7rem); }
 .btn-state-tiny.state-9 { left: 1rem; top: calc(1.0rem +  9*1.7rem); }
.btn-state-tiny.state-10 { left: 3rem; top: calc(1.0rem + 0*1.7rem); }
.btn-state-tiny.state-11 { left: 3rem; top: calc(1.0rem + 1*1.7rem); }
.btn-state-tiny.state-12 { left: 3rem; top: calc(1.0rem + 2*1.7rem); }
.btn-state-tiny.state-13 { left: 3rem; top: calc(1.0rem + 3*1.7rem); }
.btn-state-tiny.state-14 { left: 3rem; top: calc(1.0rem + 4*1.7rem); }
.btn-state-tiny.state-15 { left: 3rem; top: calc(1.0rem + 5*1.7rem); }
.btn-state-tiny.state-16 { left: 3rem; top: calc(1.0rem + 6*1.7rem); }
.btn-state-tiny.state-17 { left: 3rem; top: calc(1.0rem + 7*1.7rem); }
.btn-state-tiny.state-18 { left: 3rem; top: calc(1.0rem + 8*1.7rem); }
.btn-state-tiny.state-19 { left: 3rem; top: calc(1.0rem + 9*1.7rem); }
 .state-0:checked ~ .map-state  :not(.state-0) { visibility: hidden }
 .state-1:checked ~ .map-state  :not(.state-1) { visibility: hidden }
 .state-2:checked ~ .map-state  :not(.state-2) { visibility: hidden }
 .state-3:checked ~ .map-state  :not(.state-3) { visibility: hidden }
 .state-4:checked ~ .map-state  :not(.state-4) { visibility: hidden }
 .state-5:checked ~ .map-state  :not(.state-5) { visibility: hidden }
 .state-6:checked ~ .map-state  :not(.state-6) { visibility: hidden }
 .state-7:checked ~ .map-state  :not(.state-7) { visibility: hidden }
 .state-8:checked ~ .map-state  :not(.state-8) { visibility: hidden }
 .state-9:checked ~ .map-state  :not(.state-9) { visibility: hidden }
.state-10:checked ~ .map-state :not(.state-10) { visibility: hidden }
.state-11:checked ~ .map-state :not(.state-11) { visibility: hidden }
.state-12:checked ~ .map-state :not(.state-12) { visibility: hidden }
.state-13:checked ~ .map-state :not(.state-13) { visibility: hidden }
.state-14:checked ~ .map-state :not(.state-14) { visibility: hidden }
.state-15:checked ~ .map-state :not(.state-15) { visibility: hidden }
.state-16:checked ~ .map-state :not(.state-16) { visibility: hidden }
.state-17:checked ~ .map-state :not(.state-17) { visibility: hidden }
.state-18:checked ~ .map-state :not(.state-18) { visibility: hidden }
.state-19:checked ~ .map-state :not(.state-19) { visibility: hidden }
</style>
{board.frbFiles.length > 1 && board.frbFiles.map((_frbFile, index) => (
  <input class={`btn-check state-${index}`} type="radio" name={`state-${board.slug}`} id={`state-${index}-${board.slug}`} autocomplete="off" checked={index==0}/>
  <label class={`btn btn-primary btn-state-tiny state-${index}`} for={`state-${index}-${board.slug}`}>{index+1}</label>
))}
<a class="map-state" href={`/boards/${board.slug}`}>
{board.frbFiles.map((_frbFile, index) => (
  <img class={`card-img-top mapCard-image-board state-${index}`} src={board.imageUrls[index]} loading="lazy" />
))}
</a>
<img class="card-img-top mapCard-image-background" src={`/images/backgrounds/${board.background}.webp`} loading="lazy" />
<div class="bottom-right-absolute">
  {board.authors?.map((author) => (
    <div class="badge bg-primary">{author.url ? (<a class="text-reset" href={ author.url }>{ author.name }</a>) : author.name}</div>
  ))}
</div>